// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: netVlad.proto

#include "netVlad.pb.h"
#include "netVlad.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace netVlad {

static const char* NetConnect_method_names[] = {
  "/netVlad.NetConnect/img2vec",
};

std::unique_ptr< NetConnect::Stub> NetConnect::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< NetConnect::Stub> stub(new NetConnect::Stub(channel));
  return stub;
}

NetConnect::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_img2vec_(NetConnect_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status NetConnect::Stub::img2vec(::grpc::ClientContext* context, const ::netVlad::NetRequest& request, ::netVlad::NetResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_img2vec_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::netVlad::NetResponse>* NetConnect::Stub::Asyncimg2vecRaw(::grpc::ClientContext* context, const ::netVlad::NetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::netVlad::NetResponse>::Create(channel_.get(), cq, rpcmethod_img2vec_, context, request);
}

NetConnect::Service::Service() {
  AddMethod(new ::grpc::RpcServiceMethod(
      NetConnect_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< NetConnect::Service, ::netVlad::NetRequest, ::netVlad::NetResponse>(
          std::mem_fn(&NetConnect::Service::img2vec), this)));
}

NetConnect::Service::~Service() {
}

::grpc::Status NetConnect::Service::img2vec(::grpc::ServerContext* context, const ::netVlad::NetRequest* request, ::netVlad::NetResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace netVlad

